{
  "Title": "Choose your scenario",
  "Scenario3": {
    "Title": "Terms and Conditions",
    "Link": "/termsandconditions/",
    "Description": "Example: On your website, record consent to your terms & conditions and privacy policy when customers create an account or sign up for your products and services.",
    "Intro": "This scenario shows how the Click API can help you securely capture consent to your organization’s terms & conditions and privacy policy when customers create an account or sign up for your products and services.",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-myclickwrap-csharp/blob/master/DocuSign.MyClick/DocuSign.MyClickwrap.TermsAndConditions/Services/ClickWrapService.cs'> ClickWrapService.cs</a> on GitHub.<br><br><h3>Code flow:</h3><p><strong>Step 1</strong><br>When the form is submitted, the client-side code calls the server-side code to find the information needed to show the clickwrap.</p><p><strong>Step 2</strong><br>The server gets the list of all clickwraps in the specified DocuSign account using the <a target='blank' href='https://developers.docusign.com/docs/click-api/reference/Accounts/ClickWraps/getClickwraps/'>ClickWraps:getClickwraps</a> API call. The code then proceeds to ensure it can find the desired clickwrap based on the ClickwrapName property.</p><p><strong>Step 3</strong><br>Once the server gathers all the information, it sends it back to the client, including the <code>clickWrapID</code>, the <code>accountId</code>, the email address, and the <code>baseUrl</code> for DocuSign. To render the clickwrap on the site, the code makes a JavaScript API call to the <code>docuSignClick.Clickwrap.render()</code> method. That method takes four arguments: the <code>environment</code> (https://demo.docusign.net in our case), the <code>accountID</code> (GUID) of the DocuSign account, the <code>clickwrapId</code> (GUID) retrieved with the server API call, and the email address, which is called <code>clientUserId</code>. To make this client-side API vall the code needs to include https://demo.docusign.net/clickapi/sdk/latest/docusign-click.js in the page as a script element.</p>"
  },
  "Scenario2": {
    "Title": "Nondisclosure Agreement",
    "Link": "/nondisclosureagreement/",
    "Description": "Example: Ensure the parties with whom you conduct business, from interview candidates and employees to partners and vendors, acknowledge your nondisclosure agreement.",
    "Intro": "This scenario shows how the Click API can help you securely capture consent to your organization’s nondisclosure agreement before conducting business with parties from interview candidates and employees to partners and vendors.",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-myclickwrap-csharp/blob/master/DocuSign.MyClick/DocuSign.MyClickwrap.NonDisclosureAgreement/Services/ClickWrapService.cs'> ClickWrapService.cs</a> on GitHub.<br><br><h3>Code flow:</h3><p><strong>Step 1</strong><br>When the form is submitted, the client-side code calls the server-side code to find the information needed to show the clickwrap.</p><p><strong>Step 2</strong><br>The server gets the list of all clickwraps in the specified DocuSign account using the <a target='blank' href='https://developers.docusign.com/docs/click-api/reference/Accounts/ClickWraps/getClickwraps/'>ClickWraps:getClickwraps</a> API call. The code then proceeds to ensure it can find the desired clickwrap based on the ClickwrapName property.</p><p><strong>Step 3</strong><br>Once the server gathers all the information, it sends it back to the client, including the <code>clickWrapID</code>, the <code>accountId</code>, the email address, and the <code>baseUrl</code> for DocuSign. To render the clickwrap on the site, the code makes a JavaScript API call to the <code>docuSignClick.Clickwrap.render()</code> method. That method takes four arguments: the <code>environment</code> (https://demo.docusign.net in our case), the <code>accountID</code> (GUID) of the DocuSign account, the <code>clickwrapId</code> (GUID) retrieved with the server API call, and the email address, which is called <code>clientUserId</code>. To make this client-side API vall the code needs to include https://demo.docusign.net/clickapi/sdk/latest/docusign-click.js in the page as a script element.</p>"
  },
  "Scenario1": {
    "Title": "COVID-19 Health Declaration",
    "Link": "/covid19waiver/",
    "Description": "Example: From your office lobby, easily present your COVID-19 Health Declaration to all visitors (including employees) and capture consent before they proceed onsite.",
    "Intro": "This scenario shows how the Click API can help you securely capture consent to your organization’s COVID-19 Health Declaration before visitors enter your premises.",
    "CodeFlow": "View source file <a target='_blank' rel='noopener noreferrer' href='https://github.com/docusign/sample-app-myclickwrap-csharp/blob/master/DocuSign.MyClick/DocuSign.MyClickwrap.COVID19Waiver/Services/ClickWrapService.cs'> ClickWrapService.cs</a> on GitHub.<br><br><h3>Code flow:</h3><p><strong>Step 1</strong><br>When the form is submitted, the client-side code calls the server-side code to find the information needed to show the clickwrap.</p><p><strong>Step 2</strong><br>The server gets the list of all clickwraps in the specified DocuSign account using the <a target='blank' href='https://developers.docusign.com/docs/click-api/reference/Accounts/ClickWraps/getClickwraps/'>ClickWraps:getClickwraps</a> API call. The code then proceeds to ensure it can find the desired clickwrap based on the ClickwrapName property.</p><p><strong>Step 3</strong><br>Once the server gathers all the information, it sends it back to the client, including the <code>clickWrapID</code>, the <code>accountId</code>, the email address, and the <code>baseUrl</code> for DocuSign. To render the clickwrap on the site, the code makes a JavaScript API call to the <code>docuSignClick.Clickwrap.render()</code> method. That method takes four arguments: the <code>environment</code> (https://demo.docusign.net in our case), the <code>accountID</code> (GUID) of the DocuSign account, the <code>clickwrapId</code> (GUID) retrieved with the server API call, and the email address, which is called <code>clientUserId</code>. To make this client-side API vall the code needs to include https://demo.docusign.net/clickapi/sdk/latest/docusign-click.js in the page as a script element.</p>"
  },
  "TryMeButton": "Try Me"
}
